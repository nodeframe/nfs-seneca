{"version":3,"sources":["../src/index.js"],"names":["senecaOptions","transportConfig","si","act","args","resolve","reject","err","resp","ok","deserializeError","error","result","add","options","callback","done","length","bind","resultWithArgs","isThenable","then","response","catch","e","serializeError","type","console","log","Mesh","init","Module","registerHealthCheck","name","stack","message","errors","oe","Error"],"mappings":"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","file":"index.js","sourcesContent":["import seneca from 'seneca';\nimport Promise from 'bluebird';\nimport {register} from './register';\nimport * as Mesh from './plugin/mesh';\nimport * as Module from \"./module\";\n\nconst serializeError = (e)=> {\n  return {name: e.name, stack: e.stack, message: e.message, errors: e.errors};\n}\n\nconst deserializeError = (oe)=> {\n  const e = new Error(oe.message);\n  e.name = oe.name;\n  e.errors = oe.errors;\n  e.stack = oe.stack;\n  return e;\n}\n\nexport default function (senecaOptions, transportConfig = {}) {\n  const si = seneca(senecaOptions);\n\n  const act = (args) => {\n    return new Promise((resolve, reject)=> {\n      si.act(args, function (err, resp) {\n        if (err) {\n          reject(err);\n          return;\n        }\n        else if (!resp.ok) reject(deserializeError(resp.error));\n        else resolve(resp.result);\n      });\n    });\n  }\n\n  const add = (options, callback)=> {\n    si.add(options, function (args, done) {\n      try {\n        if (callback.length >= 2) {\n          callback.bind(si)(args, done);\n        } else {\n          const resultWithArgs = callback.bind(si)(args);\n          const isThenable = ('function' === typeof resultWithArgs.then);\n          if (isThenable) {\n            resultWithArgs.then((response)=> {\n              done(null, {ok: true, result: response});\n            }).catch((e)=> {\n              done(null, {ok: false, error: serializeError(e)});\n            });\n          } else {\n            done(null, {ok: true, result: resultWithArgs});\n          }\n        }\n      } catch (e) {\n        done(null, {ok: false, error: serializeError(e)});\n        return;\n      }\n    })\n  }\n\n  switch (transportConfig.type) {\n    case 'mesh':\n      console.log(\"nfs-seneca mesh mode!\")\n      Mesh.init(si, transportConfig)\n      break\n    default:\n      console.log(\"nfs-seneca normal mode\")\n      register(si, transportConfig)\n      break\n  }\n\n  Module.registerHealthCheck(si, transportConfig)\n\n  return {act, add, si};\n};"]}