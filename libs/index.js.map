{"version":3,"sources":["../src/index.js"],"names":["senecaOptions","transportConfig","si","act","args","resolve","reject","err","resp","ok","deserializeError","error","result","add","options","callback","done","length","bind","resultWithArgs","isThenable","then","response","catch","e","serializeError","type","console","log","Mesh","init","name","stack","message","errors","oe","Error"],"mappings":";;;;;;kBAiBe,UAASA,aAAT,EAA6C;AAAA,MAArBC,eAAqB,uEAAH,EAAG;;AAC1D,MAAMC,KAAK,sBAAOF,aAAP,CAAX;;AAEA,MAAMG,MAAM,SAANA,GAAM,CAACC,IAAD,EAAS;AACnB,WAAO,uBAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnCJ,SAAGC,GAAH,CAAOC,IAAP,EAAY,UAASG,GAAT,EAAaC,IAAb,EAAkB;AAC5B,YAAGD,GAAH,EAAO;AAAED,iBAAOC,GAAP,EAAa;AAAS,SAA/B,MACK,IAAG,CAACC,KAAKC,EAAT,EAAaH,OAAOI,iBAAiBF,KAAKG,KAAtB,CAAP,EAAb,KACAN,QAAQG,KAAKI,MAAb;AACN,OAJD;AAKD,KANM,CAAP;AAOD,GARD;;AAUA,MAAMC,MAAM,SAANA,GAAM,CAACC,OAAD,EAASC,QAAT,EAAoB;AAC9Bb,OAAGW,GAAH,CAAOC,OAAP,EAAe,UAASV,IAAT,EAAcY,IAAd,EAAmB;AAChC,UAAG;AACD,YAAGD,SAASE,MAAT,IAAiB,CAApB,EAAsB;AACpBF,mBAASG,IAAT,CAAchB,EAAd,EAAkBE,IAAlB,EAAuBY,IAAvB;AACD,SAFD,MAEK;AACD,cAAMG,iBAAiBJ,SAASG,IAAT,CAAchB,EAAd,EAAkBE,IAAlB,CAAvB;AACA,cAAMgB,aAAc,eAAe,OAAOD,eAAeE,IAAzD;AACA,cAAGD,UAAH,EAAc;AACZD,2BAAeE,IAAf,CAAoB,UAACC,QAAD,EAAY;AAC9BN,mBAAK,IAAL,EAAU,EAACP,IAAG,IAAJ,EAASG,QAAOU,QAAhB,EAAV;AACD,aAFD,EAEGC,KAFH,CAES,UAACC,CAAD,EAAK;AACZR,mBAAK,IAAL,EAAU,EAACP,IAAG,KAAJ,EAAUE,OAAMc,eAAeD,CAAf,CAAhB,EAAV;AACD,aAJD;AAKD,WAND,MAMK;AACHR,iBAAK,IAAL,EAAU,EAACP,IAAG,IAAJ,EAASG,QAAOO,cAAhB,EAAV;AACD;AACJ;AACF,OAhBD,CAgBC,OAAMK,CAAN,EAAQ;AACPR,aAAK,IAAL,EAAU,EAACP,IAAG,KAAJ,EAAUE,OAAMc,eAAeD,CAAf,CAAhB,EAAV;AACA;AACD;AACF,KArBD;AAsBD,GAvBD;;AAyBA,UAAOvB,gBAAgByB,IAAvB;AACE,SAAK,MAAL;AACEC,cAAQC,GAAR,CAAY,uBAAZ;AACAC,WAAKC,IAAL,CAAU5B,EAAV,EAAcD,eAAd;AACA;AACF;AACE0B,cAAQC,GAAR,CAAY,wBAAZ;AACA,8BAAS1B,EAAT;AACA;AARJ;;AAWA,SAAO,EAACC,QAAD,EAAKU,QAAL,EAASX,MAAT,EAAP;AACD,C;;AAnED;;;;AACA;;;;AACA;;;;AACA;;IAAY2B,I;;;;;;AAEZ,IAAMJ,iBAAiB,SAAjBA,cAAiB,CAACD,CAAD,EAAK;AAC1B,SAAO,EAACO,MAAKP,EAAEO,IAAR,EAAaC,OAAMR,EAAEQ,KAArB,EAA2BC,SAAQT,EAAES,OAArC,EAA6CC,QAAQV,EAAEU,MAAvD,EAAP;AACD,CAFD;;AAIA,IAAMxB,mBAAmB,SAAnBA,gBAAmB,CAACyB,EAAD,EAAM;AAC7B,MAAMX,IAAI,IAAIY,KAAJ,CAAUD,GAAGF,OAAb,CAAV;AACAT,IAAEO,IAAF,GAASI,GAAGJ,IAAZ;AACAP,IAAEU,MAAF,GAAWC,GAAGD,MAAd;AACAV,IAAEQ,KAAF,GAAUG,GAAGH,KAAb;AACA,SAAOR,CAAP;AACD,CAND;;AA0DC","file":"index.js","sourcesContent":["import seneca from 'seneca';\nimport Promise from 'bluebird';\nimport register from './register';\nimport * as Mesh from './plugin/mesh';\n\nconst serializeError = (e)=>{\n  return {name:e.name,stack:e.stack,message:e.message,errors: e.errors};\n}\n\nconst deserializeError = (oe)=>{\n  const e = new Error(oe.message);\n  e.name = oe.name;\n  e.errors = oe.errors;\n  e.stack = oe.stack;\n  return e;\n}\n\nexport default function(senecaOptions, transportConfig = {}){\n  const si = seneca(senecaOptions);\n\n  const act = (args) =>{\n    return new Promise((resolve,reject)=>{\n      si.act(args,function(err,resp){\n        if(err){ reject(err); return; }\n        else if(!resp.ok) reject(deserializeError(resp.error));\n        else resolve(resp.result);\n      });\n    });\n  }\n\n  const add = (options,callback)=>{\n    si.add(options,function(args,done){\n      try{\n        if(callback.length>=2){\n          callback.bind(si)(args,done);\n        }else{\n            const resultWithArgs = callback.bind(si)(args);\n            const isThenable = ('function' === typeof resultWithArgs.then);\n            if(isThenable){\n              resultWithArgs.then((response)=>{\n                done(null,{ok:true,result:response});\n              }).catch((e)=>{\n                done(null,{ok:false,error:serializeError(e)});\n              });\n            }else{\n              done(null,{ok:true,result:resultWithArgs});\n            }\n        }\n      }catch(e){\n        done(null,{ok:false,error:serializeError(e)});\n        return;\n      }\n    })\n  }\n\n  switch(transportConfig.type) {\n    case 'mesh':\n      console.log(\"nfs-seneca mesh mode!\")\n      Mesh.init(si, transportConfig)\n      break;\n    default:\n      console.log(\"nfs-seneca normal mode\")\n      register(si)\n      break;\n  }\n\n  return {act,add,si};\n};"]}